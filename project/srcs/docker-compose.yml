services:
  nginx:
    build:
      context: .
      dockerfile: requirements/nginx/Dockerfile
      args:
        ALPINE_VERSION: ${ALPINE_VERSION}
    container_name: nginx
    depends_on:
      - wordpress
    ports:
      - "49214:80"
      - "9101:9100"
    volumes:
      - ./requirements/nginx/conf/:/etc/nginx/http.d/
      - skylogs:/var/log/nginx
      - skywww:/var/www
    restart: always
    networks:
      - skynet
  mariadb:
    build:
      context: .
      dockerfile: requirements/mariadb/Dockerfile
      args:
        DB_NAME: ${DB_NAME}
        DB_USER: ${DB_USER}
        DB_PASS: ${DB_PASS}
        DB_ROOT: ${DB_ROOT}
        ALPINE_VERSION: ${ALPINE_VERSION}
    container_name: mariadb
    ports:
      - "3306:3306"
    volumes:
      - skydb:/var/lib/mysql
    restart: always
    networks:
      - skynet
  wordpress:
    build:
      context: .
      dockerfile: requirements/wordpress/Dockerfile
      args:
        DB_NAME: ${DB_NAME}
        DB_USER: ${DB_USER}
        DB_PASS: ${DB_PASS}
    container_name: wordpress
    depends_on:
      - mariadb
    volumes:
      - skywww:/var/www
    restart: always
    networks:
      - skynet
  redis:
    build:
      context: .
      dockerfile: requirements/bonus/redis/Dockerfile
      args:
        ALPINE_VERSION: ${ALPINE_VERSION}
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - skynet
    restart: always
  vsftpd:
    build:
      context: .
      dockerfile: requirements/bonus/vsftpd/Dockerfile
      args:
        ALPINE_VERSION: ${ALPINE_VERSION}
        FTP_USR: ${FTP_USR}
        FTP_PWD: ${FTP_PWD}
    container_name: vsftpd
    ports:
      - "21:21"
    volumes:
      - skywww:/var/www/
    networks:
      - skynet
    restart: always
  adminer:
    build:
      context: .
      dockerfile: requirements/bonus/adminer/Dockerfile
    container_name: adminer
    depends_on:
      - mariadb
    ports:
     - "8080:8080"
    networks:
      - skynet
    restart: always
  grafana:
    build:
      context: .
      dockerfile: requirements/grafana/Dockerfile
      args:
        GRAFANA_VERSION: ${GRAFANA_VERSION}
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    restart: always
    networks:
      - skynet
  prometheus:
    build:
      context: .
      dockerfile: requirements/prometheus/Dockerfile
      args:
        PROMETHEUS_VERSION: v${PROMETHEUS_VERSION}
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - prometheus-data:/prometheus
    restart: always
    depends_on:
      - nginx
    networks:
      - skynet
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
networks:
  skynet:
    ipam:
      driver: default
      config:
        - subnet: "192.168.92.0/24"
volumes:
  skylogs:
    driver_opts:
      o: 'bind'
      type: 'none'
      device: '$HOME/Inception/project/data/logs'
  skydb:
    driver_opts:
      o: 'bind'
      type: 'none'
      device: '$HOME/Inception/project/data/database'
  skywww:
    driver_opts:
      o: 'bind'
      type: 'none'
      device: '$HOME/Inception/project/data/www'
  grafana-data:
    driver_opts:
      o: 'bind'
      type: 'none'
      device: '$HOME/Inception/project/data/grafana_data'
  prometheus-data:
    driver_opts:
      o: 'bind'
      type: 'none'
      device: '$HOME/Inception/project/data/prometheus_data'

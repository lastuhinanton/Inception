services:
  nginx:
    build:
      context: .
      dockerfile: requirements/nginx/Dockerfile
      args:
        ALPINE_VERSION: ${ALPINE_VERSION}
    container_name: nginx
    depends_on:
      - wordpress
    ports:
      - "80:80"
    volumes:
      - ./requirements/nginx/conf/:/etc/nginx/http.d/
      - skylogs:/var/log/nginx
      - skywww:/var/www
    restart: always
    networks:
      - skynet
  mariadb:
    build:
      context: .
      dockerfile: requirements/mariadb/Dockerfile
      args:
        DB_NAME: ${DB_NAME}
        DB_USER: ${DB_USER}
        DB_PASS: ${DB_PASS}
        DB_ROOT: ${DB_ROOT}
        ALPINE_VERSION: ${ALPINE_VERSION}
    container_name: mariadb
    ports:
      - "3306:3306"
    volumes:
      - skydb:/var/lib/mysql
    restart: always
    networks:
      - skynet
  wordpress:
    build:
      context: .
      dockerfile: requirements/wordpress/Dockerfile
      args:
        DB_NAME: ${DB_NAME}
        DB_USER: ${DB_USER}
        DB_PASS: ${DB_PASS}
    container_name: wordpress
    depends_on:
      - mariadb
    volumes:
      - skywww:/var/www
    restart: always
    networks:
      - skynet
  # grafana:
  #   image: grafana/grafana-oss:8.5.22
  #   container_name: grafana
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - grafana-data:/var/lib/grafana
  #   restart: always
  #   networks:
  #     - skynet
  # prometheus:
  #   image: prom/prometheus:v2.43.0
  #   container_name: prometheus
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - prometheus-data:/prometheus
  #     - ./requirements/prometheus/conf/:/etc/prometheus
  #   restart: always
  #   networks:
  #     - skynet
  #   command:
  #     - "--config.file=/etc/prometheus/prometheus.yml"
  # node_exporter:
  #   image: quay.io/prometheus/node-exporter:latest
  #   container_name: node_exporter
  #   command:
  #     - '--path.rootfs=/host'
  #   pid: host
  #   restart: unless-stopped
  #   networks:
  #     - skynet
  #   volumes:
  #     - '/:/host:ro,rslave'
  # cadvisor:
  #   image: gcr.io/cadvisor/cadvisor:v0.45.0
  #   container_name: cadvisor
  #   # ports:
  #   #   - "8080:8080"
  #   networks:
  #     - skynet
  #   volumes:
  #     - /:/rootfs:ro
  #     - /var/run:/var/run:ro
  #     - /sys:/sys:ro
  #     - /var/lib/docker/:/var/lib/docker:ro
  #     - /dev/disk/:/dev/disk:ro
  #   devices:
  #     - /dev/kmsg
  #   restart: unless-stopped
  #   privileged: true
networks:
  skynet:
      driver: bridge
volumes:
  skylogs:
    driver_opts:
      o: 'bind'
      type: 'none'
      device: '$HOME/Inception/project/data/logs'
  skydb:
    driver_opts:
      o: 'bind'
      type: 'none'
      device: '$HOME/Inception/project/data/database'
  skywww:
    driver_opts:
      o: 'bind'
      type: 'none'
      device: '$HOME/Inception/project/data/www'
  grafana-data:
    driver_opts:
      o: 'bind'
      type: 'none'
      device: '$HOME/Inception/project/data/grafana_data'
  prometheus-data:
    driver_opts:
      o: 'bind'
      type: 'none'
      device: '$HOME/Inception/project/data/prometheus_data'
